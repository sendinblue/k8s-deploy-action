name: 'K8S Deploy Action'
description: 'Configures secrets and performs deployment to Kubernetes'
inputs:
  resource-directory:
    description: 'Location of the Kubernetes deployment resources'
    required: true
  kube-config-data:
    description: 'Content of the .kube/config file'
    required: false
  images:
    description: 'Images to deploy'
    required: false
  secrets-name:
    description: 'Name of the Secret resource'
    default: 'secrets'
    required: false
  secrets-from-files:
    description: 'Secrets from files to set (e.g. for multi-line secrets)'
    required: false
  secrets:
    description: 'Literal secrets to set'
    required: false
  dry-run:
    description: 'Strategy passed to kubectl apply. Must be "none", "server", or "client".'
    default: 'none'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Configure image, secrets, and deploy image
      id: main
      env:
        IMAGES: ${{ inputs.images }}
        SECRETS_NAME: ${{ inputs.secrets-name }}
        SECRETS: ${{ inputs.secrets }}
        SECRETS_FROM_FILES: ${{ inputs.secrets-from-files }}
        KUBE_CONFIG_DATA: ${{ inputs.kube-config-data }}
        DRY_RUN: ${{ inputs.dry-run }}
      working-directory: ${{ inputs.resource-directory }}
      run: |
        if [[ -n "$IMAGES" ]]; then
          echo "Setting image: $IMAGES"
          kustomize edit set image $IMAGES
        fi

        if [[ -n "$SECRETS" ]]; then
          echo "Adding literal secrets."
          echo "$SECRETS" > secrets.env
          kustomize edit add secret $SECRETS_NAME --from-env-file=secrets.env
        fi

        if [[ -n "$SECRETS_FROM_FILES" ]]; then
          while IFS= read -r line; do
              if [[ -n "$line" ]]; then
                echo "Adding secret from file: ${line}"
                kustomize edit add secret $SECRETS_NAME --from-file=${line}
              fi
          done <<< "$SECRETS_FROM_FILES"
        fi

        if [[ -n "$KUBE_CONFIG_DATA" ]]; then
          RANDOM_HASH=$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 8 | head -n 1)
          KUBECTL_KUBECONFIG="${{ github.workspace }}/.k8s-deploy-action-kube-config-${RANDOM_HASH}.yml"
          echo "$KUBE_CONFIG_DATA" > "$KUBECTL_KUBECONFIG"
          echo "::set-output name=kubectl-kubeconfig::${KUBECTL_KUBECONFIG}"
        fi

        echo "Applying kubectl (dry-run=$DRY_RUN)."
        kustomize build | kubectl apply \
          --kubeconfig="$KUBECTL_KUBECONFIG" \
          --dry-run="$DRY_RUN" \
          --filename -
      shell: bash

    - name: Cleanup
      run: |
        rm "${{ steps.main.outputs.kubectl-kubeconfig }}"
      shell: bash
